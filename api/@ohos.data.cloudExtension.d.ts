/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file
 * @kit ArkData
 */

import type rpc from './@ohos.rpc';
import type cloudData from './@ohos.data.cloudData';
import type relationalStore from './@ohos.data.relationalStore';

/**
 * Provides interfaces to implement extended cloud capabilities.
 *
 * @namespace cloudExtension
 * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
 * @since 11 dynamic
 */
declare namespace cloudExtension {
  /**
   * Provides interface for managing cloud assets.
   *
   * @extends relationalStore.Asset
   * @interface CloudAsset
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface CloudAsset extends relationalStore.Asset {
    /**
     * Asset ID.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    assetId: string;

    /**
     * Asset hash value.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    hash: string;
  }

  /**
   * Indicates cloud assets in one column.
   *
   * @typedef { Array<CloudAsset> } CloudAssets
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  type CloudAssets = Array<CloudAsset>;

  /**
   * Indicates possible cloud types.
   *
   * @typedef { null | long | double | string | boolean | Uint8Array | CloudAsset | CloudAssets } CloudType
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  type CloudType = null | long | double | string | boolean | Uint8Array | CloudAsset | CloudAssets;

  /**
   * Defines cloud information.
   *
   * @interface CloudInfo
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface CloudInfo {
    /**
     * Cloud information. For details, see {@link ServiceInfo}.
     *
     * @type { ServiceInfo }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    cloudInfo: ServiceInfo;

    /**
     * Defines brief application information.
     *
     * @type { Record<string, AppBriefInfo> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    apps: Record<string, AppBriefInfo>;
  }

  /**
   * Defines cloud service information.
   *
   * @interface ServiceInfo
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface ServiceInfo {
    /**
     * Whether cloud is enabled. The value <b>true</b> means cloud is enabled;
     * the value <b>false</b> means the opposite.
     *
     * @type { boolean }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    enableCloud: boolean;

    /**
     * ID of the cloud account generated by using SHA-256.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    id: string;

    /**
     * Total space (in KB) of the account on the server.
     *
     * @type { long }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    totalSpace: long;

    /**
     * Available space (in KB) of the account on the server.
     *
     * @type { long }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    remainingSpace: long;

    /**
     * Current user of the device.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    user: int;
  }

  /**
   * Defines the brief application information.
   *
   * @interface AppBriefInfo
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface AppBriefInfo {
    /**
     * ID of the application.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    appId: string;

    /**
     * Bundle name.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    bundleName: string;

    /**
     * Whether cloud is enabled for the application.
     * The value <b>true</b> means the cloud is enabled; the <b>false</b> means
     * the opposite.
     *
     * @type { boolean }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    cloudSwitch: boolean;

    /**
     * Application instance ID.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    instanceId: int;
  }

  /**
   * Enumerates the field types.
   *
   * @enum { int }
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export enum FieldType {
    /**
     * NULL.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    NULL = 0,

    /**
     * Number.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    NUMBER = 1,

    /**
     * Real.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    REAL = 2,

    /**
     * Text.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    TEXT = 3,

    /**
     * Boolean.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    BOOL = 4,

    /**
     * BLOB.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    BLOB = 5,

    /**
     * Asset. For details, see {@link relationalStore.Asset}.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    ASSET = 6,

    /**
     * Assets. For details, see {@link relationalStore.Assets}.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    ASSETS = 7
  }

  /**
   * Defines the fields.
   *
   * @interface Field
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface Field {
    /**
     * Alias of the field on the server.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    alias: string;

    /**
     * Column name.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    colName: string;

    /**
     * Type of the field. For details, see {@link FieldType}.
     *
     * @type { FieldType }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    type: FieldType;

    /**
     * Whether the current column holds the primary key.
     *
     * @type { boolean }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    primary: boolean;

    /**
     * Whether the current column is nullable.
     *
     * @type { boolean }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    nullable: boolean;
  }

  /**
   * Defines a table.
   *
   * @interface Table
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface Table {
    /**
     * Alias of the table on the server.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    alias: string;

    /**
     * Name of the table.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    name: string;

    /**
     * Fields in the table. For details, see {@link Field}.
     *
     * @type { Array<Field> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    fields: Array<Field>;
  }

  /**
   * Defines a database.
   *
   * @interface Database
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface Database {
    /**
     * Name of the database.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    name: string;

    /**
     * Alias of the database on the server.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    alias: string;

    /**
     * Tables in the database. For details, see {@link Table}.
     *
     * @type { Array<Table> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    tables: Array<Table>;
  }

  /**
   * Defines the application schema.
   *
   * @interface AppSchema
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface AppSchema {

    /**
     * Bundle name of the application.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    bundleName: string;

    /**
     * Schema version.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    version: int;

    /**
     * Databases {@link Database} of the application.
     *
     * @type { Array<Database> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    databases: Array<Database>;
  }

  /**
   * Defines the data in the cloud.
   *
   * @interface CloudData
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface CloudData {
    /**
     * Next cursor for query.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    nextCursor: string;

    /**
     * Whether the server has more data to query {@link CloudDB.query()}.
     *
     * @type { boolean }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    hasMore: boolean;

    /**
     * Array of data queried, including the data values and extension
     * values {@link ExtensionValue}.
     *
     * @type { Array<Record<string, CloudType>> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    values: Array<Record<string, CloudType>>;
  }

  /**
   * Defines the subscription information.
   *
   * @interface SubscribeInfo
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface SubscribeInfo {
    /**
     * Subscription expiration time, in milliseconds.
     *
     * @type { long }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    expirationTime: long;

    /**
     * Data to be observed.
     *
     * @type { Record<string, Array<SubscribeId>> }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    subscribe: Record<string, Array<SubscribeId>>;
  }

  /**
   * Defines the subscription ID.
   *
   * @interface SubscribeId
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface SubscribeId {
    /**
     * Alias of the database on the server.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    databaseAlias: string;

    /**
     * Subscription ID generated by {@link CloudService.subscribe()}.
     *
     * @type { string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    id: string;
  }

  /**
   * Enumerates the operations that can be performed on the database.
   *
   * @enum { int }
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export enum Flag {
    /**
     * Insert data.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    INSERT = 0,

    /**
     * Update data.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    UPDATE = 1,

    /**
     * Delete data.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    DELETE = 2
  }

  /**
   * Defines the extension values.
   *
   * @interface ExtensionValue
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface ExtensionValue {
    /**
     * ID generated by {@link CloudDB.insert()}.
     * An ID is generated for each row when data is first inserted to the cloud.
     * The ID must be unique for each table.
     *
     * @type { string }
     * @readonly
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    readonly id: string;

    /**
     * Time when the row data was created.
     *
     * @type { long }
     * @readonly
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    readonly createTime: long;

    /**
     * Time when the row data was last modified.
     *
     * @type { long }
     * @readonly
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    readonly modifyTime: long

    /**
     * Database operation.
     *
     * @type { Flag }
     * @readonly
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    readonly operation: Flag;
  }

  /**
   * Defines the lock information.
   *
   * @interface LockInfo
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface LockInfo {
    /**
     * Duration for which the cloud database is locked, in seconds.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    interval: int;

    /**
     * Lock ID for locking the cloud database.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    lockId: int;
  }

  /**
   * Enumerates the error codes.
   *
   * @enum { int }
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export enum ErrorCode {
    /**
     * Successful.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    SUCCESS = 0,

    /**
     * Unknown error.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    UNKNOWN_ERROR = 1,

    /**
     * Network error.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    NETWORK_ERROR = 2,

    /**
     * Cloud is disabled.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    CLOUD_DISABLED = 3,

    /**
     * The cloud database is locked by others.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    LOCKED_BY_OTHERS = 4,

    /**
     * The number of records exceeds the limit.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    RECORD_LIMIT_EXCEEDED = 5,

    /**
     * The cloud has no space for the asset.
     *
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    NO_SPACE_FOR_ASSET = 6
  }

  /**
   * Defines the result.
   *
   * @interface Result
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface Result<T> {
    /**
     * Error code.
     *
     * @type { int }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    code: int;

    /**
     * Error code description.
     *
     * @type { ?string }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    description?: string;

    /**
     * Result value.
     *
     * @type { ?T }
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    value?: T;
  }

  /**
   * Creates a share service stub with the specified instance.
   *
   * @param { ShareCenter } instance - Indicates the <b>ShareCenter</b> instance.
   * @returns { Promise<rpc.RemoteObject> } Returns remote object.
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  function createShareServiceStub(instance: ShareCenter): Promise<rpc.RemoteObject>;

  /**
   * Creates a cloud service stub with the specified instance.
   *
   * @param { CloudService } instance - Indicates the <b>CloudService</b> instance.
   * @returns { Promise<rpc.RemoteObject> } Returns the remote object.
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  function createCloudServiceStub(instance: CloudService): Promise<rpc.RemoteObject>;

  /**
   * Creates a cloud database stub with the specified instance.
   *
   * @param { CloudDB } instance - Indicates the <b>CloudDB</b> instance.
   * @returns { Promise<rpc.RemoteObject> } Returns the remote object.
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  function createCloudDBStub(instance: CloudDB): Promise<rpc.RemoteObject>;

  /**
   * Creates an asset loader stub with the specified instance.
   *
   * @param { AssetLoader } instance - Indicates the <b>AssetLoader</b> instance.
   * @returns { Promise<rpc.RemoteObject> } Returns remote object.
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  function createAssetLoaderStub(instance: AssetLoader): Promise<rpc.RemoteObject>;

  /**
   * Provides interfaces for the operations on the cloud database.
   *
   * @interface CloudDB
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface CloudDB {
    /**
     * Generates the IDs of the rows of data to be inserted to the cloud.
     * The IDs must be unique for each table.
     *
     * @param { int } count - Indicates the number of IDs to generate.
     * @returns { Promise<Result<Array<string>>> } Returns the IDs generated.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    generateId(count: int): Promise<Result<Array<string>>>;

    /**
     * Inserts data to the cloud.
     *
     * @param { string } table - Indicates the table name.
     * @param { Array<Record<string, CloudType>> } values - Indicates the data to insert.
     * @param { Array<Record<string, CloudType>> } extensions - Indicates the extension
     * values {@link ExtensionValue}.
     * @returns { Promise<Array<Result<Record<string, CloudType>>>> } Returns the insert result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    insert(
      table: string,
      values: Array<Record<string, CloudType>>,
      extensions: Array<Record<string, CloudType>>
    ): Promise<Array<Result<Record<string, CloudType>>>>;

    /**
     * Updates data in the cloud.
     *
     * @param { string } table - Indicates the table name.
     * @param { Array<Record<string, CloudType>> } values - Indicates the new data.
     * @param { Array<Record<string, CloudType>> } extensions - Indicates the extension
     * values {@link ExtensionValue}.
     * @returns { Promise<Array<Result<Record<string, CloudType>>>> } Returns the update result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    update(
      table: string,
      values: Array<Record<string, CloudType>>,
      extensions: Array<Record<string, CloudType>>
    ): Promise<Array<Result<Record<string, CloudType>>>>;

    /**
     * Deletes data.
     *
     * @param { string } table - Indicates the table name.
     * @param { Array<Record<string, CloudType>> } extensions - Indicates the extension
     * values {@link ExtensionValue}.
     * @returns { Promise<Array<Result<Record<string, CloudType>>>> } Returns the delete result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    delete(
      table: string,
      extensions: Array<Record<string, CloudType>>
    ): Promise<Array<Result<Record<string, CloudType>>>>;

    /**
     * Queries data.
     *
     * @param { string } table - Indicates the table name.
     * @param { Array<string> } fields - Indicates the columns to query.
     * @param { int } queryCount - Indicates the number of data records
     * to query.
     * @param { string } queryCursor - Indicates the cursor.
     * @returns { Promise<Result<CloudData>> } Returns the query result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    query(table: string, fields: Array<string>, queryCount: int, queryCursor: string): Promise<Result<CloudData>>;

    /**
     * Locks the cloud database.
     * The cloud database will be unlocked when the lock interval has expired.
     * When the cloud database is locked, other devices cannot synchronize data
     * with the cloud.
     *
     * @returns { Promise<Result<LockInfo>> } Returns the locked information.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    lock(): Promise<Result<LockInfo>>;

    /**
     * Uses the heartbeat to extend the lock interval if it is not enough.
     *
     * @param { int } lockId - Indicates the lock ID of the heartbeat.
     * @returns { Promise<Result<LockInfo>> } Returns the time.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    heartbeat(lockId: int): Promise<Result<LockInfo>>;

    /**
     * Unlocks the cloud database.
     *
     * @param { int } lockId - Indicates the lock ID.
     * @returns { Promise<Result<boolean>> } Returns the unlock result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    unlock(lockId: int): Promise<Result<boolean>>;
  }

  /**
   * Provides interfaces for implementing the asset loader.
   *
   * @interface AssetLoader
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface AssetLoader {
    /**
     * Downloads assets.
     *
     * @param { string } table - Indicates the name of the table.
     * @param { string } gid - Indicates the GID.
     * @param { string } prefix - Indicates the prefix information.
     * @param { Array<CloudAsset> } assets - Indicates the assets to download.
     * @returns { Promise<Array<Result<CloudAsset>>> } Returns the asset download result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    download(table: string, gid: string, prefix: string, assets: Array<CloudAsset>): Promise<Array<Result<CloudAsset>>>;

    /**
     * Uploads assets.
     *
     * @param { string } table - Indicates the name of the table.
     * @param { string } gid - Indicates the GID.
     * @param { Array<CloudAsset> } assets - Indicates the assets to upload.
     * @returns { Promise<Array<Result<CloudAsset>>> } Returns the asset upload result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    upload(table: string, gid: string, assets: Array<CloudAsset>): Promise<Array<Result<CloudAsset>>>;
  }

  /**
   * Provides interfaces for implementing ShareCenter.
   *
   * @interface ShareCenter
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface ShareCenter {
    /**
     * Shares data with specific participants.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @param { Array<cloudData.sharing.Participant> } participants - Indicates the participant.
     * @returns { Promise<Result<Array<Result<cloudData.sharing.Participant>>>> } Returns the sharing result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    share(
      userId: int,
      bundleName: string,
      sharingResource: string,
      participants: Array<cloudData.sharing.Participant>
    ): Promise<Result<Array<Result<cloudData.sharing.Participant>>>>;

    /**
     * UnShares data with specific participants.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @param { Array<cloudData.sharing.Participant> } participants - Indicates the participant.
     * @returns { Promise<Result<Array<Result<cloudData.sharing.Participant>>>> } Returns the sharing result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    unshare(
      userId: int,
      bundleName: string,
      sharingResource: string,
      participants: Array<cloudData.sharing.Participant>
    ): Promise<Result<Array<Result<cloudData.sharing.Participant>>>>;

    /**
     * Exits the sharing.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @returns { Promise<Result<void>> } Returns the exit result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    exit(userId: int, bundleName: string, sharingResource: string): Promise<Result<void>>;

    /**
     * Changes privilege of the specific participants.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @param { Array<cloudData.sharing.Participant> } participants - Indicates the participant.
     * @returns { Promise<Result<Array<Result<cloudData.sharing.Participant>>>> } Returns the changing result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    changePrivilege(
      userId: int,
      bundleName: string,
      sharingResource: string,
      participants: Array<cloudData.sharing.Participant>
    ): Promise<Result<Array<Result<cloudData.sharing.Participant>>>>;

    /**
     * Queries participants of the specific sharing resource.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @returns { Promise<Result<Array<cloudData.sharing.Participant>>> } Returns the query result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    queryParticipants(
      userId: int,
      bundleName: string,
      sharingResource: string
    ): Promise<Result<Array<cloudData.sharing.Participant>>>;

    /**
     * Queries participants based on the specified invitation code.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } invitationCode - Indicates the invitation code.
     * @returns { Promise<Result<Array<cloudData.sharing.Participant>>> } Returns the query result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    queryParticipantsByInvitation(
      userId: int,
      bundleName: string,
      invitationCode: string
    ): Promise<Result<Array<cloudData.sharing.Participant>>>;

    /**
     * Confirms invitation.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } invitationCode - Indicates the invitation code.
     * @param { cloudData.sharing.State } state - Indicates the state.
     * @returns { Promise<Result<string>> } Returns the sharing resource.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    confirmInvitation(
      userId: int,
      bundleName: string,
      invitationCode: string,
      state: cloudData.sharing.State
    ): Promise<Result<string>>;

    /**
     * Changes confirmation.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @param { string } sharingResource - Indicates the sharing resource.
     * @param { cloudData.sharing.State } state - Indicates the state.
     * @returns { Promise<Result<void>> } Returns the change result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    changeConfirmation(
      userId: int,
      bundleName: string,
      sharingResource: string,
      state: cloudData.sharing.State
    ): Promise<Result<void>>;
  }

  /**
   * Provides interfaces for implementing CloudService.
   *
   * @interface CloudService
   * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
   * @systemapi
   * @since 11 dynamic
   */
  export interface CloudService {
    /**
     * Obtains the service information.
     *
     * @returns { Promise<ServiceInfo> } Returns the service information obtained.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    getServiceInfo(): Promise<ServiceInfo>;

    /**
     * Obtains the brief application information.
     *
     * @returns { Promise<Record<string, AppBriefInfo>> }
     * Returns the key-value pairs corresponding to <b>bundle</b> and
     * <b>AppBriefInfo</b>.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    getAppBriefInfo(): Promise<Record<string, AppBriefInfo>>;

    /**
     * Obtains the application schema information.
     *
     * @param { string } bundleName - Indicates the bundle name of the application.
     * @returns { Promise<Result<AppSchema>> } Returns <b>AppSchema</b>.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    getAppSchema(bundleName: string): Promise<Result<AppSchema>>;

    /**
     * Subscribes to data changes in the cloud.
     * When the cloud server data is changed, the server notifies the device of
     * the data change.
     *
     * @param { Record<string, Array<Database>> } subInfo - Indicates
     * the data to be subscribed to, that is, the key-value pairs corresponding
     * to an array of bundle names and databases.
     * @param { long } expirationTime - Indicates the subscription expiration
     * time.
     * @returns { Promise<Result<SubscribeInfo>> } Returns <b>SubscribeInfo</b>.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    subscribe(
      subInfo: Record<string, Array<Database>>,
      expirationTime: long
    ): Promise<Result<SubscribeInfo>>;

    /**
     * Unsubscribes from the data changes in the cloud.
     *
     * @param { Record<string, Array<string>> } unsubscribeInfo - Indicates
     * the data to be unsubscribe from, that is, the key-value pairs
     *  corresponding to an array of bundle names and databases.
     * @returns { Promise<int> } Returns unsubscribeInfo result.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    unsubscribe(unsubscribeInfo: Record<string, Array<string>>): Promise<int>;

    /**
     * Connects to a database.
     *
     * @param { string } bundleName - Indicates the bundle name of the application.
     * @param { Database } database - Indicates the database to connect.
     * @returns { Promise<rpc.RemoteObject> } Returns connectDB RemoteObject.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    connectDB(bundleName: string, database: Database): Promise<rpc.RemoteObject>;

    /**
     * Connects to an assetLoader.
     *
     * @param { string } bundleName - Indicates the bundle name of the application.
     * @param { Database } database - Indicates the database of bundle.
     * @returns { Promise<rpc.RemoteObject> } Returns connectAssetLoader RemoteObject.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    connectAssetLoader(bundleName: string, database: Database): Promise<rpc.RemoteObject>;

    /**
     * Connects to a share center.
     *
     * @param { int } userId - Indicates the user ID.
     * @param { string } bundleName - Indicates the bundle name.
     * @returns { Promise<rpc.RemoteObject> } Returns shareCenter RemoteObject.
     * @syscap SystemCapability.DistributedDataManager.CloudSync.Server
     * @systemapi
     * @since 11 dynamic
     */
    connectShareCenter(userId: int, bundleName: string): Promise<rpc.RemoteObject>;
  }
}

export default cloudExtension;