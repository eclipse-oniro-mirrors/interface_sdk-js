'use static'
/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file
 * @kit ArkUI
 */

import { IndicatorComponentController } from './indicatorcomponent';
import { CommonMethod, Callback, ICurve, Bindable, AttributeModifier } from './common';
import { EdgeEffect, Curve, PageFlipMode } from './enums';
import { Length, LengthMetrics, VoidCallback, ResourceColor, VP, Font } from './units';
import { memo, ComponentBuilder } from './../stateManagement/runtime';

/**
 * Provides methods for switching components.
 *
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare class SwiperController {
  /**
   * constructor.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  constructor();

  /**
   * Called when the next child component is displayed.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  showNext(): void;

  /**
   * Called when the previous subcomponent is displayed.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  showPrevious(): void;

  /**
   * Controlling Swiper to change to the specified subcomponent.
   *
   * @param { int | undefined } index - the index of item to be redirected, default value is 0,
   *     undefined means setting to default value.
   * @param { SwiperAnimationMode | boolean } [animationMode] - animation mode for changeIndex,
   *     true is equivalent to SwiperAnimationMode.DEFAULT_ANIMATION,
   *     false is equivalent to SwiperAnimationMode.NO_ANIMATION.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  changeIndex(index: int | undefined, animationMode?: SwiperAnimationMode | boolean): void;

  /**
   * Called when need to stop the swiper animation.
   *
   * @param { ?VoidCallback } callback
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  finishAnimation(callback?: VoidCallback): void;

  /**
   * Called when need to preload specified child.
   *
   * @param { Array<int> | undefined } indices - Indices of swiper child to be preloaded,
   *     default value is no swiper child to be preloaded, undefined means setting to default value.
   * @returns { Promise<void> } The promise returned by the function.
   * @throws { BusinessError } 401 - Parameter invalid. Possible causes:
   * <br> 1. The parameter type is not Array<int>.
   * <br> 2. The parameter is an empty array.
   * <br> 3. The parameter contains an invalid index.
   * @throws { BusinessError } 100004 - Controller not bound to component.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  preloadItems(indices: Array<int> | undefined): Promise<void>;
}

/**
 * Defines the indicator class.
 *
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare class Indicator<T> {
  /**
   * Set the indicator to the left.
   *
   * @param { Length | undefined } value - the indicator to the left, default value is adaptive size layout,
   *     centered alignment in the spindle direction according to the size of the indicator itself and
   *     the size of the swiper, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  left(value: Length | undefined): T;

  /**
   * Set the indicator to the top.
   *
   * @param { Length | undefined } value - the indicator to the top, default value is adaptive size layout,
   *     centered alignment in the spindle direction according to the size of the indicator itself and
   *     the size of the swiper, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  top(value: Length | undefined): T;

  /**
   * Set the indicator to the right.
   *
   * @param { Length | undefined } value - the indicator to the right, default value is adaptive size layout,
   *     centered alignment in the spindle direction according to the size of the indicator itself and
   *     the size of the swiper, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  right(value: Length | undefined): T;

  /**
   * Set the indicator to the bottom.
   *
   * @param { Length | undefined } value - the indicator to the bottom, default value is adaptive size layout,
   *     centered alignment in the spindle direction according to the size of the indicator itself and
   *     the size of the swiper, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  bottom(value: Length | undefined): T;

  /**
   * Sets the position of the navigation indicator relative to the bottom edge of the Swiper component.
   * You can also choose to ignore the size of the navigation indicator using the ignoreSize property.
   *
   * @param { LengthMetrics | Length | undefined } bottom - the offset of indicator to the bottom,
   *     default value is adaptive size layout, centered alignment in the spindle direction according
   *     to the size of the indicator itself and the size of the swiper, undefined means setting to default value.
   * @param { boolean } ignoreSize - ignore the size of the indicator.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  bottom(bottom: LengthMetrics | Length | undefined, ignoreSize: boolean): T;

  /**
   * Set the indicator to the left in LTR
   * Set the indicator to the right in RTL
   *
   * @param { LengthMetrics | undefined } value - the indicator to the right in LTR, indicator to the left in RTL,
   *     default value is 0.0_vp, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  start(value: LengthMetrics | undefined): T;

  /**
   * Set the indicator to the left in RTL
   * Set the indicator to the right in LTR
   *
   * @param { LengthMetrics | undefined } value - the indicator to the left in RTL, Set the indicator
   *     to the right in LTR, default value is 0.0_vp, undefined means setting to default value.
   * @returns { T }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  end(value: LengthMetrics | undefined): T;

  /**
   * DotIndicator class object.
   *
   * @returns { DotIndicator }
   * @static
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  static dot(): DotIndicator;

  /**
   * DigitIndicator class object.
   *
   * @returns { DigitIndicator }
   * @static
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  static digit(): DigitIndicator;
}

/**
 * Define DotIndicator, the indicator type is dot.
 *
 * @extends Indicator<DotIndicator>
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare class DotIndicator extends Indicator<DotIndicator> {
  /**
   * Constructor.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  constructor();

  /**
   * Set the indicator item width.
   *
   * @param { Length | undefined } value - the indicator item width, default value is 6.0_vp,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  itemWidth(value: Length | undefined): DotIndicator;

  /**
   * Set the indicator item height.
   *
   * @param { Length | undefined } value - the indicator item height, default value is 6.0_vp,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  itemHeight(value: Length | undefined): DotIndicator;

  /**
   * Set the indicator item width when selected.
   *
   * @param { Length | undefined } value - the indicator item width when selected, default value is 6.0_vp,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedItemWidth(value: Length | undefined): DotIndicator;

  /**
   * Set the indicator item height when selected.
   *
   * @param { Length | undefined } value - the indicator item height when selected, default value is 6.0_vp,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedItemHeight(value: Length | undefined): DotIndicator;

  /**
   * Setting indicator style mask.
   *
   * @param { boolean | undefined } value - the indicator item mask, default value is false,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  mask(value: boolean | undefined): DotIndicator;

  /**
   * Set the indicator color.
   *
   * @param { ResourceColor | undefined } value - the indicator item color, default value is { #18243119 },
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  color(value: ResourceColor | undefined): DotIndicator;

  /**
   * Set the navigation point color.
   *
   * @param { ResourceColor | undefined } value - the indicator item when selected, default value is { #007DFFFF },
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedColor(value: ResourceColor | undefined): DotIndicator;

  /**
   * Set the Indicator maxDisplayCount when selected.
   *
   * @param { int | undefined } maxDisplayCount - the indicator item maxDisplayCount when selected,
   *     default value is 6, undefined means setting to default value.
   * @returns { DotIndicator } return the DotIndicator
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  maxDisplayCount(maxDisplayCount: int | undefined): this;

  /**
   * Set the space between dots.
   *
   * @param { LengthMetrics | undefined } space - the space between dots, default value is 8.0_vp,
   *     undefined means setting to default value.
   * @returns { DotIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  space(space: LengthMetrics | undefined): DotIndicator;
}

/**
 * Set Swiper column count adaptation.
 *
 * @typedef SwiperAutoFill
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface SwiperAutoFill {
  /**
   * Set minSize size.
   *
   * @type { VP }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  minSize: VP;
}

/**
 * Define DigitIndicator, the indicator type is digit.
 *
 * @extends Indicator<DigitIndicator>
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare class DigitIndicator extends Indicator<DigitIndicator> {
  /**
   * Constructor.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  constructor();

  /**
   * Set font color of the digital indicator.
   *
   * @param { ResourceColor | undefined } value - the indicator font color, default value is { #FF182431 },
   *     undefined means setting to default value.
   * @returns { DigitIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  fontColor(value: ResourceColor | undefined): DigitIndicator;

  /**
   * Set font color of the digital indicator when selected.
   *
   * @param { ResourceColor | undefined } value - the indicator font color when selected,
   *     default value is { #FF182431 }, undefined means setting to default value.
   * @returns { DigitIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedFontColor(value: ResourceColor | undefined): DigitIndicator;

  /**
   * Set the digital indicator font (just support font size and weight).
   *
   * @param { Font | undefined } value - the indicator font size and weight,
   *     default value is { size: 14, weight: FontWeight.Normal }, undefined means setting to default value.
   * @returns { DigitIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  digitFont(value: Font | undefined): DigitIndicator;

  /**
   * Set the digital indicator font (just support font size and weight).
   *
   * @param { Font | undefined } value - the indicator font size and weight when selected,
   *     default value is { size: 14, weight: FontWeight.Normal }, undefined means setting to default value.
   * @returns { DigitIndicator }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedDigitFont(value: Font | undefined): DigitIndicator;
}

/**
 * Arrow object.
 *
 * @interface ArrowStyle
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface ArrowStyle {
  /**
   * Is show the arrow background or not.
   *
   * @type { ?boolean }
   * @default false
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  showBackground?: boolean;

  /**
   * When the indicator show, set the arrow position is side of the indicator or in the middle of content area.
   * The arrow is displayed on side of the indicator, if the value is false.
   *
   * @type { ?boolean }
   * @default false
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  isSidebarMiddle?: boolean;

  /**
   * The arrow background size.
   * The size of the arrow is three-quarters of the background size, when the background is displayed.
   *
   * @type { ?Length }
   * @default When isSidebarMiddle is false, the default value is 24vp, Otherwise,the default value is 32vp
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  backgroundSize?: Length;

  /**
   * The arrow background background color.
   *
   * @type { ?ResourceColor }
   * @default When isSidebarMiddle is false, the default value is #00000000, Otherwise, the default value is #19182431
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  backgroundColor?: ResourceColor;

  /**
   * The arrow size.
   * The arrow size can be set, when the background is not displayed.
   * The size of the arrow is three-quarters of the background size, when the background is displayed.
   *
   * @type { ?Length }
   * @default When isSidebarMiddle is false, the default value is 18vp, Otherwise, the default value is 24vp
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  arrowSize?: Length;

  /**
   * The arrow color.
   *
   * @type { ?ResourceColor }
   * @default #182431
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  arrowColor?: ResourceColor;
}

/**
 * Declare the size of the swiper on the spindle.
 *
 * @enum { number }
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare enum SwiperDisplayMode {
  /**
   * Carousel map extension.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  STRETCH
}

/**
 * Provides an interface for swiper animation.
 *
 * @interface SwiperAnimationEvent
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface SwiperAnimationEvent {
  /**
   * Offset of the current page to the start position of the swiper main axis. The unit is vp.
   *
   * @type { double }
   * @default 0.0 vp
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  currentOffset: double;

  /**
   * Offset of the target page to the start position of the swiper main axis. The unit is vp.
   *
   * @type { double }
   * @default 0.0 vp
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  targetOffset: double;

  /**
   * Start speed of the page-turning animation. The unit is vp/s.
   *
   * @type { double }
   * @default 0.0 vp/s
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  velocity: double;
}

/**
 * Define autoPlay related options.
 *
 * @interface AutoPlayOptions
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface AutoPlayOptions {
  /**
   * Set whether to stop autoplay immediately on touch down event.
   *
   * @type { boolean }
   * @default true
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  stopWhenTouched: boolean;
}

/**
 * Swiper nested scroll nested mode

 * @enum { number } SwiperNestedScrollMode
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare enum SwiperNestedScrollMode {
  /**
   * Only Self response scrolling.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  SELF_ONLY = 0,

  /**
   * Self priority response scrolling.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  SELF_FIRST = 1
}

/**
 * Declare the animation mode of SwiperController's changeIndex method.
 *
 * @enum { number }
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare enum SwiperAnimationMode {
  /**
   * Jump to target index without animation.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  NO_ANIMATION = 0,

  /**
   * Scroll to target index with animation.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  DEFAULT_ANIMATION = 1,

  /**
   * Jump to some index near the target index without animation,
   * then scroll to target index with animation.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  FAST_ANIMATION = 2
}

/**
 * Defines a swiper callback when onAnimationStart.
 *
 * @typedef { function } OnSwiperAnimationStartCallback
 * @param { int } index - The index value of the swiper page that when animation start.
 * @param { int } targetIndex - The target index value of the swiper page that when animation start.
 * @param { SwiperAnimationEvent } extraInfo - The extra callback info.
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export type OnSwiperAnimationStartCallback = (index: int, targetIndex: int,
  extraInfo: SwiperAnimationEvent) => void;

/**
 * Defines a swiper callback when onAnimationEnd.
 *
 * @typedef { function } OnSwiperAnimationEndCallback
 * @param { int } index - The index value of the swiper page that when animation end.
 * @param { SwiperAnimationEvent } extraInfo - The extra callback info.
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export type OnSwiperAnimationEndCallback = (index: int, extraInfo: SwiperAnimationEvent) => void;

/**
 * Defines a swiper callback when onGestureSwipe.
 *
 * @typedef { function } OnSwiperGestureSwipeCallback
 * @param { int } index - The index value of the swiper page before gesture swipe.
 * @param { SwiperAnimationEvent } extraInfo - The extra callback info.
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export type OnSwiperGestureSwipeCallback = (index: int, extraInfo: SwiperAnimationEvent) => void;

/**
 * Defines the swiper attribute functions.
 *
 * @extends CommonMethod
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 * @noninterop
 */
export declare interface SwiperAttribute extends CommonMethod {
  /**
   * Called when the index value of the displayed subcomponent is set in the container.
   *
   * @param { int | Bindable<int> | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default index(value: int | Bindable<int> | undefined): this;

  /**
   * Sets whether to enable automatic playback for child component switching.
   * 
   * @param { boolean | undefined } value - Whether to enable automatic playback for child component switching,
   *     default value is false, undefined means setting to default value.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default autoPlay(value: boolean | undefined): this;

  /**
   * Set whether the subcomponent plays automatically.
   *
   * @param { boolean | undefined } autoPlay - whether the subcomponent plays automatically
   * @param { AutoPlayOptions | undefined } options - autoPlay related options
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default autoPlay(autoPlay: boolean | undefined, options: AutoPlayOptions | undefined): this;

  /**
   * Called when the time interval for automatic playback is set.
   *
   * @param { int | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default interval(value: int | undefined): this;

  /**
   * Use indicator component controller.
   *
   * @param { IndicatorComponentController | DotIndicator | DigitIndicator | boolean | undefined } indicator -
   * the style value or show indicator of the swiper indicator.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default indicator(indicator: IndicatorComponentController | DotIndicator | DigitIndicator | boolean | undefined): this;

  /**
   * Set arrow is enabled, or set the arrow style.
   *
   * @param { ArrowStyle | boolean | undefined } value - arrow is displayed or set the arrow style.
   * @param { boolean | undefined } [isHoverShow] - arrow is display when mouse hover in indicator hotspot.
   * @returns { SwiperAttribute } return the component attribute.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default displayArrow(value: ArrowStyle | boolean | undefined, isHoverShow?: boolean | undefined): this;

  /**
   * Called when setting whether to turn on cyclic sliding.
   *
   * @param { boolean | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default loop(value: boolean | undefined): this;

  /**
   * Called when the animation duration of the switch is set.
   *
   * @param { int | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default duration(value: int | undefined): this;

  /**
   * Called when setting whether to slide vertically.
   *
   * @param { boolean | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default vertical(value: boolean | undefined): this;

  /**
   * Sets the space between child components.
   *
   * @param { double | string | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default itemSpace(value: double | string | undefined): this;

  /**
   * Called when setting the size of the swiper container on the spindle.
   *
   * @param { SwiperDisplayMode | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default displayMode(value: SwiperDisplayMode | undefined): this;

  /**
   * Sets the number of child components to be preloaded(cached).
   *
   * @param { int | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default cachedCount(value: int | undefined): this;

  /**
   * Sets the number of child components to be preloaded(cached).
   *
   * @param { int | undefined } count - Number of child components to be preloaded (cached).
   * @param { boolean | undefined } isShown - whether to show the nodes in the cache.
   * @returns { SwiperAttribute } the attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default cachedCount(count: int | undefined, isShown: boolean | undefined): this;

  /**
   * Sets the number of elements to display per page.
   *
   * If swipeByGroup is set to true:
   * 1、All sub-items are grouped from index 0.
   * 2、The number of sub-items in each group is the value of displayCount.
   * 3、If the number of sub-items in the last group is less than displayCount, placeholder items are added to supplement the number of last group.
   * 4、Placeholder items do not display any content and are only used as placeholders.
   * 5、When turning pages, turn pages by group.
   *
   * @param { int | string | SwiperAutoFill | undefined } value
   * @param { boolean | undefined } [swipeByGroup] - if swipe by group.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default displayCount(value: int | string | SwiperAutoFill | undefined, swipeByGroup?: boolean | undefined): this;

  /**
   * Invoked when setting the sliding effect
   *
   * @param { EdgeEffect | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default effectMode(value: EdgeEffect | undefined): this;

  /**
   * Sets whether to disable the swipe feature
   *
   * @param { boolean | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default disableSwipe(value: boolean | undefined): this;

  /**
   * Sets the animation curve
   * Curve is an enumeration type for common curves
   * ICurve is a curve object
   *
   * @param { Curve | string | ICurve | undefined } value
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default curve(value: Curve | string | ICurve | undefined): this;

  /**
   * Called when the index value changes.
   *
   * @param { Callback<int> | undefined } event
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onChange(event: Callback<int> | undefined): this;

  /**
   * Called when a new index becomes selected. Animation is not necessarily complete.
   *
   * @param { Callback<int> | undefined } event - callback to notify which index has been selected
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onSelected(event: Callback<int> | undefined): this;

  /**
   * The previous margin which can be used to expose a small portion of the previous item.
   * When the previous item is empty, do not display blank space.
   *
   * @param { Length | undefined } value - The length of previous margin.
   * @param { boolean | undefined } [ignoreBlank] - Whether to hide(ignore) the previous margin on the first page in non-loop scenarios.
   * @returns { SwiperAttribute } The attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default prevMargin(value: Length | undefined, ignoreBlank?: boolean | undefined): this;

  /**
   * The next margin which can be used to expose a small portion of the latter item.
   * When the next item is empty, do not display blank space.
   *
   * @param { Length | undefined } value - The length of next margin.
   * @param { boolean | undefined } [ignoreBlank] - Whether to hide(ignore) the next margin on the last page in non-loop scenarios.
   * @returns { SwiperAttribute } The attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default nextMargin(value: Length | undefined, ignoreBlank?: boolean | undefined): this;

  /**
   * Called when a new index becomes unselected. Animation is not necessarily complete.
   *
   * @param { Callback<int> | undefined } event - callback to notify which index has been unselected
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onUnselected(event: Callback<int> | undefined): this;

  /**
   * Called when the swiper animation start.
   *
   * @param { OnSwiperAnimationStartCallback | undefined } event
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onAnimationStart(event: OnSwiperAnimationStartCallback | undefined): this;

  /**
   * Called when the swiper animation end.
   *
   * @param { OnSwiperAnimationEndCallback | undefined } event
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onAnimationEnd(event: OnSwiperAnimationEndCallback | undefined): this;

  /**
   * Called when the swiper swipe with the gesture.
   *
   * @param { OnSwiperGestureSwipeCallback | undefined } event
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onGestureSwipe(event: OnSwiperGestureSwipeCallback | undefined): this;

  /**
   * Called to setting the nested scroll mode.
   *
   * @param { SwiperNestedScrollMode | undefined } value - mode for nested scrolling.
   * @returns { SwiperAttribute } the attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default nestedScroll(value: SwiperNestedScrollMode | undefined): this;

  /**
   * Custom swiper content transition animation.
   *
   * @param { SwiperContentAnimatedTransition | undefined } transition - custom content transition animation.
   * @returns { SwiperAttribute } the attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default customContentTransition(transition: SwiperContentAnimatedTransition | undefined): this;

  /**
   * Called when the swiper content did scroll.
   *
   * @param { ContentDidScrollCallback | undefined } handler - callback of scroll,
   * selectedIndex is the index value of the swiper content selected before animation start.
   * index is the index value of the swiper content.
   * position is the moving ratio of the swiper content from the start position of the swiper main axis.
   * mainAxisLength is the swiper main axis length for calculating position.
   * @returns { SwiperAttribute } the attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onContentDidScroll(handler: ContentDidScrollCallback | undefined): this;

  /**
   * Setting whether the indicator is interactive.
   *
   * @param { boolean | undefined } value - Whether the indicator is interactive.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default indicatorInteractive(value: boolean | undefined): this;

  /**
   * Setting page flip mode on mouse wheel event.
   *
   * @param { PageFlipMode | undefined } mode - page flip mode on mouse wheel event. The default value is PageFlipMode.CONTINUOUS.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default pageFlipMode(mode: PageFlipMode | undefined): this;

  /**
   * Called when the swiper content will scroll.
   *
   * @param { ContentWillScrollCallback | undefined } handler - callback of will scroll.
   * @returns { SwiperAttribute } the attribute of the swiper.
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default onContentWillScroll(handler: ContentWillScrollCallback | undefined): this;

  /**
   * Set the attribute modifier of swiper.
   *
   * @param { AttributeModifier<SwiperAttribute> | AttributeModifier<CommonMethod> | undefined } modifier
   *     The attribute modifier of swiper.
   * @returns { SwiperAttribute }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  default attributeModifier(modifier: AttributeModifier<SwiperAttribute> | AttributeModifier<CommonMethod> | undefined): this;
}

/**
 * Defines the swiper content animated transition options.
 *
 * @interface SwiperContentAnimatedTransition
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface SwiperContentAnimatedTransition {
  /**
   * Defines the timeout of custom content transition animation after the page is moved out of the swiper. The unit is ms.
   * If SwiperContentTransitionProxy.finishTransition() is not invoked, use the timeout as animation end time.
   *
   * @type { ?int }
   * @default 0 ms
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  timeout?: int;

  /**
   * Called when custom content transition animation start.
   *
   * @type { Callback<SwiperContentTransitionProxy> }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  transition: Callback<SwiperContentTransitionProxy>;
}

/**
 * The proxy of SwiperContentAnimatedTransition.
 *
 * @interface SwiperContentTransitionProxy
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface SwiperContentTransitionProxy {
  /**
   * the index value of the swiper content selected before animation start.
   *
   * @type { int }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  selectedIndex: int;

  /**
   * The index value of the swiper content.
   *
   * @type { int }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  index: int;

  /**
   * the moving ratio of the swiper content from the start position of the swiper main axis.
   *
   * @type { double }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  position: double;

  /**
   * the swiper main axis length for calculating position.
   *
   * @type { double }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  mainAxisLength: double;

  /**
   * Notifies Swiper page the custom content transition animation is complete.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  finishTransition(): void;
}

/**
 * The result of swiper ContentWillScrollCallback.
 *
 * @interface SwiperContentWillScrollResult
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export declare interface SwiperContentWillScrollResult {
  /**
   * the index value of the current child page.
   *
   * @type { int }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  currentIndex: int;

  /**
   * the index value of the child page that will display.
   *
   * @type { int }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  comingIndex: int;

  /**
   * the sliding offset of each frame. Positive numbers indicating slide backward(e.g. from index=1 to index=0),
   * negative numbers indicating slide forward(e.g. from index=0 to index=1).
   *
   * @type { number }
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @since 20 static
   */
  offset: double;
}

/**
 * The callback of onContentDidScroll.
 *
 * @typedef { function } ContentDidScrollCallback
 * @param { int } selectedIndex - the index value of the swiper content selected before animation start.
 * @param { int } index - the index value of the swiper content.
 * @param { double } position - the moving ratio of the swiper content from the start position of the swiper main axis.
 * @param { double } mainAxisLength - the swiper main axis length for calculating position.
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export type ContentDidScrollCallback = (selectedIndex: int, index: int, position: double,
  mainAxisLength: double) => void;

/**
 * The callback of onContentWillScroll.
 *
 * @typedef { function } ContentWillScrollCallback
 * @param { SwiperContentWillScrollResult } result - the result of swiper ContentWillScrollCallback.
 * @returns { boolean } whether to allow scroll, true indicating can scroll and false indicating can not scroll.
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 */
export type ContentWillScrollCallback = (result: SwiperContentWillScrollResult) => boolean;

/**
 * Defines Swiper Component
 *
 * @param { SwiperController } [controller] - Swiper constructor options
 * @param { function } [content_] - container
 * @returns { SwiperAttribute }
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20 static
 * @noninterop
 */
@memo
@ComponentBuilder
export declare function Swiper(
  controller?: SwiperController,
  @memo
  content_?: () => void,
): SwiperAttribute
