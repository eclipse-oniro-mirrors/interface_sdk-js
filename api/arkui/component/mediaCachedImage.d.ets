/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @file
 * @kit ArkUI
 * @arkts 1.2
 */


import { ImageAttribute, UIImageAttribute } from "./image";
import image from '../../@ohos.multimedia.image';
import { ResourceStr } from "./units";
import { DrawableDescriptor } from '../../@ohos.arkui.drawableDescriptor';
import { memo, ComponentBuilder } from "./../stateManagement/runtime";
import { AttributeModifier, CommonMethod, UICommonMethod } from "./common";
/**
 * Defines the resource which can use ASTC.
 *
 * @interface ASTCResource
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @since 20
 */
export interface ASTCResource {
    /**
     * Array of ASTC uri resources, indicating the range of ASTC data to be obtained.
     * @type { Array<string> }
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @since 20
     */
    sources: Array<string>;
    /**
     * Column size, indicating the number of ASTC resources to splice per row.
     * @type { number }
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @since 20
     */
    column: number;
}
export declare interface MediaCachedImageAttribute extends ImageAttribute {
    attributeModifier(modifier: AttributeModifier<MediaCachedImageAttribute> | AttributeModifier<CommonMethod> | undefined): this;
}
export declare interface UIMediaCachedImageAttribute extends UIImageAttribute {
    @memo
    attributeModifier(modifier: AttributeModifier<MediaCachedImageAttribute> | AttributeModifier<CommonMethod> | undefined): this;
}

@memo
@ComponentBuilder
export declare function MediaCachedImage(
    src: image.PixelMap | ResourceStr | DrawableDescriptor | ASTCResource, 
    @memo
    content_?: () => void,
): UIMediaCachedImageAttribute