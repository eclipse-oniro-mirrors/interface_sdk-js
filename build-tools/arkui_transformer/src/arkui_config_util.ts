/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as fs from "fs"

export interface ArkUIConfig {
    components: Array<string>
}

export class ArkUIConfigUtil {
    static instance: ArkUIConfigUtil = new ArkUIConfigUtil
    constructor() {
        this.config = JSON.parse(fs.readFileSync("./config/arkui_config.json", 'utf-8'))
        this.config.components.forEach(c => {
            this.componentSet.add(c)
        })
    }
    private config: ArkUIConfig
    // Full set of component, should be manually mantained by config file
    private componentSet: Set<string> = new Set
    // Component superclass set, generated by traversing the declartion AST
    private componentSuperclassSet: Set<string> = new Set
    public isRelatedToComponent(name: string): boolean {
        return this.componentSet.has(name) || this.componentSuperclassSet.has(name)
    }
    public isComponent(name: string, subfix: string): boolean {
        return this.componentSet.has(name.replaceAll(subfix, ""))
    }
    public addComponentSuperclass(name: string): void {
        if (!this.isComponent(name, 'Attribute')) {
            this.componentSuperclassSet.add(name);
        }
    }
}

export default ArkUIConfigUtil.instance
